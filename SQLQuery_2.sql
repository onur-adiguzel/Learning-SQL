--Practice with New Database
-- AGGREGATE FUNCTIONS(SUM, COUNT, MIN, MAX, AVG)
-- SELECT SUN(PRICE), COUNT(ID),MIN(PRICE),MAX(PRICE,AVG(PRICE)

-- SELECT * FROM SALES
-- SELECT SUM(LINENET) FROM SALES WHERE BRANCH='Kocaeli Subesi'
-- SELECT SUM(LINENET),COUNT(*) FROM SALES WHERE BRANCH='Kocaeli Subesi'
-- SELECT SUM(LINENET),COUNT(*),MIN(LINENET),MAX(LINENET)
-- FROM SALES WHERE BRANCH='iSTANBUL Subesi'
-- SELECT SUM(LINENET) AS TOPLAMSATIS,COUNT(*) AS SATIRSAYISI,MIN(LINENET) AS ENDUSUKFIYAT,MAX(LINENET) ENYUKSEKFIYAT, AVG(LINENET) AS ORTALAMASATISFIYATI
-- FROM SALES WHERE BRANCH='iSTANBUL Subesi'

-- HOW TO USE GROUP BY?

-- SUBELERE GÖRE GRUPLAYARAK BİLGİLERİ ÇEKME
-- SELECT
-- BRANCH AS SUBE,
-- SUM(LINENET) AS TOPLAMSATIS,
-- COUNT(*) AS SATIRSAYISI,
-- MIN(LINENET) AS ENDUSUKFIYAT,
-- MAX(LINENET) ENYUKSEKFIYAT,
-- AVG(LINENET) AS ORTALAMASATISFIYATI
-- FROM SALES --WHERE BRANCH='iSTANBUL Subesi'
-- GROUP BY BRANCH

-- EN ÇOK SATIŞ YAPAN ŞUBELERİ SATIŞ TUTARLARINA GÖRE SIRALAYARAK GETİR
-- SELECT TOP 10
-- BRANCH AS SUBEADI,SUM(LINENET) AS TOPLAMSATIS
-- FROM SALES 
-- GROUP BY BRANCH ORDER BY SUM(LINENET) DESC

--TOPLAM SATIŞI 50.000'DEN BÜYÜK OLAN ŞUBELERİ GETİR, BU TARZ SORULARI WHERE ŞARTIYLA YAPAMAYI ÇÜNKÜ BİR ÇOK SATIRIN TOPLAMINDAN SONRA GRUPLAYIP SIRALIYORUZ
--HOW TO USE HAVING? FIRST OF ALL USE AFTER GROUP BY
-- SELECT BRANCH AS SUBEADI,SUM(LINENET) AS TOPLAMSATIS
-- FROM SALES
-- GROUP BY BRANCH 
-- HAVING SUM(LINENET)>50000
-- ORDER BY SUM(LINENET) DESC


--BİR MAĞAZANIN GÜN BAZLI SATIŞ RAKAMLARI
--GROUPBY ANTRENMANLARI

-- SELECT BRANCH SUBE, DATE_ TARIH,SUM(LINENET) TOPLAMSATIS, COUNT(*) SATIRSAYISI
-- FROM SALES
-- Where BRANCH = 'Bursa Subesi' --AND DATE_='20170105'
-- GROUP BY BRANCH, DATE_
-- ORDER BY DATE_

--BİR GÜNÜN MAĞAZA BAZLI SATIŞ RAKAMLARI

-- SELECT DATE_,BRANCH,SUM(LINENET) TOPLAMSATIS,COUNT(*) SATIRSAYISI FROM SALES
-- WHERE DATE_='20170202' --AND BRANCH='ADANA SUBESi'
-- GROUP BY DATE_,BRANCH
-- ORDER BY DATE_,SUM(LINENET) DESC

--ÜRÜN KATEGORİLERİNE GÖRE SATIŞ RAKAMLARI

-- SELECT * FROM
-- SALES

-- SELECT CATEGORY_NAME1,BRAND,SUM(LINENET)
-- FROM SALES
-- WHERE CATEGORY_NAME1 IS NOT NULL AND CATEGORY_NAME1='GIDA'
-- GROUP BY CATEGORY_NAME1, BRAND
-- ORDER BY SUM(LINENET) DESC

-- SELECT BRAND,CATEGORY_NAME1,CATEGORY_NAME2,SUM(LINENET)
-- FROM SALES
-- WHERE BRAND IS NOT NULL AND BRAND='ÜLKER'
-- GROUP BY CATEGORY_NAME1,BRAND,CATEGORY_NAME2
-- ORDER BY SUM(LINENET) DESC


--MAĞAZANIN MÜŞTERİ SAYISINI HESAPLAMA
-- SELECT BRANCH,COUNT(DISTINCT CLIENTNAME)
-- FROM SALES
-- WHERE BRANCH='AMASYA SUBESi'
-- GROUP BY BRANCH

--BİR MÜŞTERİNİN GİTTİĞİ MAĞAZA SAYISI
-- SELECT CLIENTNAME, COUNT(DISTINCT BRANCH)
-- FROM SALES
-- WHERE CLIENTNAME='Abdulkadir AYDOZER'
-- GROUP BY CLIENTNAME

-- SELECT DISTINCT BRANCH FROM SALES WHERE CLIENTNAME = 'Abdulkadir AYDOZER'

--10'DAN FAZLA MAĞAZAYA GİDEN MÜŞTERİLERİ LİSTELE
-- SELECT CLIENTNAME, COUNT(DISTINCT BRANCH)
-- FROM SALES
-- GROUP BY CLIENTNAME
-- HAVING COUNT(DISTINCT BRANCH)>10
--10'DAN FAZLA MAĞAZAYA GİTMİŞ BİR MÜŞTERİNİN HANGİ MAĞAZALARA GİTTİĞİNİ BİR KERE GÖRÜNECEK ŞEKİLDE LİSTELE
-- SELECT DISTINCT BRANCH
-- FROM SALES
-- WHERE CLIENTNAME='Arzu ALPER'

